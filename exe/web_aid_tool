#!/usr/bin/env ruby
# frozen_string_literal: true

require "aurora"
require "aurora/web_aid_tool"
require "logger"
require "optparse"

debug_modbus = monitor = ignore_missing_registers = false
port = 4567

options = OptionParser.new do |opts|
  opts.banner = "Usage: web_aid_tool /path/to/serial/port [options]"

  opts.on("--port PORT", "Which port to listen on (default 4567)", Integer) { |v| port = v }
  opts.on("--debug-modbus", "Print actual protocol bytes") { debug_modbus = true }
  opts.on("--monitor", "Print interpreted registers as they are requested, like aurora_monitor") { monitor = true }
  opts.on("--ignore-missing-registers",
          "For YAML input only, just log a warning when a register doesn't exist, instead of failing") do
    ignore_missing_registers = true
  end
  opts.on("-v", "--version", "Print version") do
    puts Aurora::VERSION
    exit
  end
  opts.on("-h", "--help", "Prints this help") do
    puts opts
    exit
  end
end

options.parse!

unless ARGV.length == 1
  puts options
  exit 1
end

#slave = Aurora::ABCClient.open_modbus_slave(ARGV[0], ignore_missing_registers: ignore_missing_registers)
#slave.logger = Logger.new($stdout)
#slave.logger.level = debug_modbus ? :debug : :warn

#Aurora::WebAIDTool.modbus_slave = slave
Aurora::WebAIDTool.monitor = monitor
Aurora::WebAIDTool.port = port
Aurora::WebAIDTool.run!
